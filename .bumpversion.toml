[tool.bumpversion]
allow_dirty = true
commit = true
commit_args = ""
current_version = "0.10.0-beta.1"
ignore_missing_files = false
ignore_missing_version = false
message = "Bump version: {current_version} → {new_version}"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:-(?P<pre_l>[a-zA-Z-]+)\\.(?P<pre_n>0|[1-9]\\d*))?
"""
regex = false
replace = "{new_version}"
search = "{current_version}"
serialize = [
  "{major}.{minor}.{patch}-{pre_l}.{pre_n}",
  "{major}.{minor}.{patch}",
]
sign_tags = false
tag = true
tag_message = "Bump version: {current_version} → {new_version}"
tag_name = "v{new_version}"

# Java maven files
pre_commit_hooks = [
  """
    NEW_VERSION="${BVHOOK_NEW_MAJOR}.${BVHOOK_NEW_MINOR}.${BVHOOK_NEW_PATCH}"
    if [ ! -z "$BVHOOK_NEW_PRE_L" ] && [ ! -z "$BVHOOK_NEW_PRE_N" ]; then
        NEW_VERSION="${NEW_VERSION}-${BVHOOK_NEW_PRE_L}.${BVHOOK_NEW_PRE_N}"
    fi
    echo "Constructed new version: $NEW_VERSION"
    cd java && mvn versions:set -DnewVersion=$NEW_VERSION && mvn versions:commit
    cd ..
    git add java/
    """,
]

[tool.bumpversion.parts.pre_l]
optional_value = "final"
values = ["beta", "final"]

[[tool.bumpversion.files]]
filename = "node/package.json"
replace = "\"version\": \"{new_version}\","
search = "\"version\": \"{current_version}\","

[[tool.bumpversion.files]]
filename = "nodejs/package.json"
replace = "\"version\": \"{new_version}\","
search = "\"version\": \"{current_version}\","

# nodejs binary packages
[[tool.bumpversion.files]]
glob = "nodejs/npm/*/package.json"
replace = "\"version\": \"{new_version}\","
search = "\"version\": \"{current_version}\","

# Cargo files
# ------------
[[tool.bumpversion.files]]
filename = "rust/ffi/node/Cargo.toml"
replace = "\nversion = \"{new_version}\""
search = "\nversion = \"{current_version}\""

[[tool.bumpversion.files]]
filename = "rust/lancedb/Cargo.toml"
replace = "\nversion = \"{new_version}\""
search = "\nversion = \"{current_version}\""
